<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="rtxtNews.Text" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque dictum placerat ipsum, nec tincidunt lectus. Sed scelerisque, magna at elementum congue, risus lacus suscipit neque, mollis consectetur eros tellus eu ligula. Ut ante dui, laoreet id consequat sit amet, sollicitudin et magna. Etiam maximus gravida neque id dictum. Suspendisse rhoncus nisl non lacus mattis, eget fringilla dui sodales. Pellentesque auctor dictum faucibus. Duis dignissim dolor sed tincidunt mollis. Vivamus eu lorem hendrerit, imperdiet quam eu, fringilla sem. Donec eu viverra urna, ac volutpat massa.

Etiam mollis nisl eu odio ullamcorper, quis porta nisl euismod. Phasellus eu orci eget erat aliquam convallis ac vel erat. Aenean maximus nibh id nunc luctus, vel sodales ex ultrices. Vestibulum imperdiet odio vel nisl pulvinar gravida. Nam auctor magna eget justo accumsan faucibus. Morbi consequat, lectus ac feugiat suscipit, ante sapien imperdiet lacus, nec tincidunt nulla quam congue ipsum. Fusce iaculis nibh sapien, placerat varius tellus mollis eget. Aenean quis libero leo. Aliquam vulputate purus lorem, vitae pretium leo accumsan vel. Aenean ut ipsum lobortis, semper lectus et, facilisis lorem. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aenean bibendum porta consectetur. Morbi venenatis lobortis nisl. Nulla nec pellentesque lacus, sed sagittis felis. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Morbi laoreet quis dolor a sagittis.

Integer in suscipit mauris, non pulvinar nibh. Suspendisse faucibus lobortis nunc in facilisis. Duis risus nisi, imperdiet nec egestas non, feugiat in dolor. Duis bibendum, tellus et efficitur suscipit, nunc ante dictum tortor, sed gravida leo velit ac risus. Vestibulum eget nulla mollis, ultricies neque sit amet, iaculis turpis. Donec auctor ultricies lacus, quis placerat mauris malesuada non. Etiam non nisi ut mauris tristique placerat et ut eros. Nunc pharetra mattis porttitor. Nulla mattis feugiat neque at cursus. Aenean velit ligula, porttitor a justo at, egestas fringilla est.

Nulla facilisi. Donec sit amet porttitor mauris. Aliquam in mollis odio. Aliquam vel nulla luctus, pellentesque lectus sit amet, commodo purus. Aliquam vitae rutrum mi, et cursus dui. Fusce fermentum urna in lorem faucibus vulputate. Nunc tincidunt tempor lorem, eget dignissim nulla sodales sit amet. Suspendisse gravida congue risus, nec egestas quam eleifend eget. Proin tincidunt dui sit amet turpis scelerisque varius. Fusce interdum nulla id rutrum ullamcorper.

Nam convallis massa velit, vel hendrerit neque molestie ac. Sed sollicitudin pretium metus sed aliquet. Vivamus vestibulum diam eget euismod posuere. Nunc neque lacus, pretium id suscipit ac, luctus at est. Mauris hendrerit nibh id ante dictum, accumsan mollis purus blandit. Sed a accumsan sapien. Nullam et ante ultrices, porttitor nisi commodo, tristique lorem. Morbi turpis ex, bibendum at faucibus quis, mollis non enim. Praesent condimentum dignissim est, sed scelerisque lorem iaculis vitae. </value>
  </data>
</root>